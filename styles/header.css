.header__menu-hamburger {
    width: 24px;
    height: 24px;
    background-image: url("../assets/Menu.svg");
    background-repeat: no-repeat;
    background-position: center;
    display: inline-block;
    /*Se fosse somente inline ele não is permitir ajustes de width e height */
}


.container__button:checked~.container__label>.header__menu-hamburger{  /*  Então, o que esses combinadores fazem? Esse combinador do til, ele procura algum outro elemento que esteja em seguida dele, que tem aquela classe, então, o que aconteceu aqui? Ele procurou outro elemento que tivesse a classe .container__rotulo, 
    que fosse depois do container__botão, aí ele encontrou nosso label. Depois do label botamos um sinal de mais, o sinal de uma mais ele
     procura algo que está dentro deste elemento. Ou seja, temos um label e dentro dele tem um .cabeçalho__menu-hanburguer. Então foi isso que ele fez, ele foi pegar lá dentro o elemento que fosse cabeçalho, menu hambúrguer.
    E também vimos aqui a pseudo classe checked e ela detecta se o input está com o checked, isso já vimos em outra aula também. */
    background-image: url("../assets/Frame\ 20.svg");
}

.container__button:checked~.container__label{
    background: var(--blue-gradient);
}

.header {
    /**tag pai*/
    background-color: var(--white);
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

.container {
    /* tag filha do header*/
    display: flex;
    align-items: center;
}

.container__image {
    padding: 1em;
}

.list-menu {
    display: none;
    /*desaparece com o elemento e nao ocupa espaco nenhum*/
    position: absolute;
    top: 100%;
    /*eu coloquei positon relative no header e  position absolute na lista do menu  e um top de 100% para que ele fiquei abaixo do menu isso so esta sendo  feito porque nao estamos usando JS*/
    width: vw;/* amos utilizar uma propriedade chamada top e o valor 100%, ou seja, o topo deste elemento deve estar 100% depois do cabeçalho. Já a propriedade de largura width deve conter a sua unidade de medida como vw que significa view width, 
    ou seja, a largura da tela. Sendo assim, 60vw significa 60% da tela que está acessando a página.*/
}

.container__button:checked~.list-menu {
    display: block;
}

/*containe__button selecinou o input, o checked e uma pseuclasse  ele detecta se esta preenchido o checkbox
~ e um combinador css, um combinador css vai procurar um outro elemento que vem em seguida, e como se fosse uma
consicional no css. ele funciona assim: se o container menu tiver um checked ele vai procurar outro que venha
depois dele que tenha a classe lista menu e vai botar display block nele se nao tivesse nenhum com a lista menu ele nao ia fazer nada e se
nao tivesse no check nao aconteceria nada*/

.list-menu__title,
.list-menu__item {
    padding: 1em;
    /* padding foi usado para criar uma espacamento e cor para ficar parecendo o menu pois nao estamos usando JS */
    background-color: var(--white);
}

.list-menu__title {
    color: var(--orange);
    font-weight: 700;
}

.list-menu__link {
    background: var(--blue-gradient); /* aqui ele nao aplica na font */
    -webkit-background-clip: text; /* webkit e para funcionar em outros tipos de navgadores */
    -webkit-text-fill-color: transparent;
    background-clip: text;/* esse clip text vai prende o backgroun somente aonde tem texto */
    text-transform: uppercase; /* trasnforma as letras em maiusculas */

}

.container__button {
    display: none;
}

.container__title {
    display: none;  /* E no celular ela estava aparecendo, na medida pequena, porque eu não configurei para ela desaparecer nem nada. Então, fora do media query, vamos botar para sumir esse container título. Então vou selecionar o container__titulo { o container título sozinho acho que já vai tirar. Então container__titulo {, display: none;. Salvei, vamos olhar, sumiu. Então ele desapareceu porque tínhamos pedido para desaparecer e não colocamos para ele aparecer quando chegar na medida do 1024, então, lá no seletor do container título, dentro do media query, 
        você vai botar um display: block;, salvei, vamos testar aqui se funcionou, já está aparecendo, eu vou diminuir a tela e ele some, 
        ele aparece só quando está no 1024. */
}

.options {
    display: none;
}

.container__text {
    display: none;
}

/* Esse screen tem como fazer sem colocar ele, mas ele é um media type e eu quero dizer que ele é a tela, eu vou até deixar um artigo no 
Para Saber Mais, para você ver que tem outros tipos de media types e entender melhor porque eu botei esse screen.
Eu disse que botando esse and que a tradução seria “e”, que é o mínimo da largura da tela seja 1024px, que é o tamanho que o designer
 botou ali 1024. Geralmente, quando fazemos layouts com o mobile first, nós botamos o min-width que aí chega quando o mínimo do tamanho da 
 tela for 1024px, ele vai fazer aqueles estilos de dentro, caso você faça desktop first, que é você começa no tamanho do computador e 
 depois vai diminuindo. Você usa o max-width, ou seja, o max-width ele pega quando
 o tamanho da tela for o máximo daquele tamanho, e vai aplicar aqueles estilos e aqui queremos com no mínimo 1024. Mas assim é 
 uma questão de convenção que botamos max quando é desktop, e min quando é mobile. */
@media screen and (min-width: 1024px) {
    .container__title,
    .container__title--bold {
        font-family: var(--second-font);
        font-size: 30px;
    }

    .container__title {
        font-weight: 400;
        display: block;  /* E no celular ela estava aparecendo, na medida pequena, porque eu não configurei para ela desaparecer nem nada. Então, fora do media query, vamos botar para sumir esse container título. Então vou selecionar o container__titulo { o container título sozinho acho que já vai tirar. Então container__titulo {, display: none;. Salvei, vamos olhar, sumiu. Então ele desapareceu porque tínhamos pedido para desaparecer e não colocamos para ele aparecer quando chegar na medida do 1024, então, lá no seletor do container título, dentro do media query, 
            você vai botar um display: block;, salvei, vamos testar aqui se funcionou, já está aparecendo, eu vou diminuir a tela e ele some, 
            ele aparece só quando está no 1024. */
    }

    .container__title--bold {
        font-weight: 700;
    }

    .options {
        display: flex;
    }

    .options__item {
        padding: 1em;
        text-transform: uppercase;
    }

    .options__link {
        text-decoration: none;
        color: var(--black);
    }

    .container__image-transparent{
        display: none;
    }

    .header__menu-hamburger {
        display: none;
    }

    .option__button:checked~.list-menu {
        display: block;
        width: auto;
    }

    .option__button {
        display: none;
    }

    .option__button:checked~.label__option>.options__item {
        background: var(--blue-gradient);
        color: var(--white);
    }

    .options__item {
        padding: 2em 1em;
    }

    .list-menu__item:hover {
        background: var(--blue-gradient);
    }

    .list-menu__item:hover > .list-menu__link {
        -webkit-text-fill-color: var(--white);  /* Eu tive que usar esse webkit text fill color, porque lá no início do projeto, para botar essa cor azul, 
        aquele degradê na fonte, nós tivemos que colocar um background e depois associar ele à fonte. 
        E quando usamos o webkit text fill color tínhamos definido como transparente, então ele não aplicava cor 
        nenhuma além daquele background estava aplicado. Então assim quando definimos já agora uma cor de preenchimento para o seu webkit, agora ele está funcionando direito. 
        Também aproveitamos e tiramos o text-decoration, que não tínhamos tirado antes, quando tínhamos escondido essa cor de preenchimento ele tinha sumido automaticamente junto,
         e agora precisamos configurar. */
        text-decoration: none;
    }
}

@media screen and (min-width: 1728px) {
    .container__link {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: var(--black);
    }

    .header {
        padding: 0 2em;
    }

    .options {
        margin-right: auto;  /* Quando usamos o transform flex container, quando colocamos lá dentro uma margem de left, right, bottom se botarmos o valor auto, ele vai tentar preencher todo o espaço que está sobrando. Então aqui
         no caso foi, ele preencheu toda a direita com a margem, então todos os itens foram empurrados
          para a esquerda */
    }

    .container__text {
        display: block;
    }

    
}